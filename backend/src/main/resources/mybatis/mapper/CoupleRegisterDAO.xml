<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.playhere.couple.ICoupleRegisterService">

    <!-- 커플 등록 -->
    <insert id="createCouple" parameterType="map" useGeneratedKeys="true" keyProperty="coupleId" keyColumn="couple_id">
    INSERT INTO couple (couple_id, user_id_1, user_id_2)
    VALUES (COUPLE_SEQ.NEXTVAL, #{userId1}, #{userId2})
	</insert>

    <!-- member 테이블에 couple_id, couple_status 업데이트 -->
    <update id="updateCoupleStatus" parameterType="map">
        UPDATE member
        SET couple_id = #{coupleId}, couple_status = #{coupleStatus}
        WHERE user_id = #{userId}
    </update>
    
    <delete id="deleteCouple">
        DELETE FROM couple WHERE couple_id = #{coupleId}
    </delete>

    <delete id="deleteCoupleCode">
        DELETE FROM couple_code WHERE user_id = #{userId}
    </delete>
    
    
     <!-- ✅ 각 SQL 문을 개별적인 태그로 분리 -->
    
    <!-- 1️⃣ 커플을 끊은 사람 (couple1) → couple_id 제거 & 상태 0 (커플 아님) -->
    <update id="updateMemberAfterDisconnect">
        UPDATE member
        SET couple_id = NULL, couple_status = 0
        WHERE user_id = #{userId}
    </update>

    <!-- 2️⃣ 커플이 끊긴 상대방 (couple2) → couple_status = 2 (일방적 해제) -->
    <update id="updatePartnerAfterDisconnect">
      UPDATE member
	    SET couple_id = NULL, couple_status = 2
        WHERE user_id = #{userId}
    </update>

    <!-- 3️⃣ couple 테이블에서 커플 관계 삭제 -->
    <delete id="deleteCoupleByUser">
        DELETE FROM couple 
        WHERE (user_id_1 = #{userId} OR user_id_2 = #{userId})
    </delete>

    <!-- 4️⃣ couple_code 테이블에서 초대자 & 수락자의 코드 삭제 -->
    <delete id="deleteCoupleCodeByUser">
        DELETE FROM couple_code 
        WHERE user_id IN (
            #{userId}, 
            (SELECT user_id_2 FROM couple WHERE user_id_1 = #{userId}),
            (SELECT user_id_1 FROM couple WHERE user_id_2 = #{userId})
        )
    </delete>
    

</mapper>